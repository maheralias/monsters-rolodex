{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handleClick3","console","log","handleClick2","handleClick1","bind","state","string","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","logo","onClick","e","target","value","cubaan","href","rel","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAAe,MAA0B,iC,2BCI5BA,EAAO,SAAAC,GAAK,OAEjB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCLjBC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACSD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAEnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCH1BM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAeA,EACfG,SAAYF,MCuELG,E,kDA1Eb,aAAc,IAAD,8BACX,gBAsBFC,aAAe,WACbC,QAAQC,IAAI,qBAtBZ,EAAKC,aAAc,EAAKC,aAAaC,KAAlB,gBACnB,EAAKC,MAAQ,CACXC,OAAS,cACTC,YAAc,GACdhB,SAAW,IANF,E,qDAWb,WAAoB,IAAD,OACjBiB,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACtB,SAASqB,S,0BAMzC,WACEZ,QAAQC,IAAI,sB,oBAOd,WAAU,IAAD,OACP,EAAiCa,KAAKT,MAA9BE,EAAR,EAAQA,YACFQ,EADN,EAAqBxB,SACayB,QAAO,SAAA9B,GAAO,OAAIA,EAAQE,KAAK6B,cAAcC,SAASX,EAAYU,kBACpG,OACE,qBAAKlC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,kDACA,qBAAKE,IAAKkC,EAAMpC,UAAU,WAAWC,IAAI,SAF3C,QAIS,8CAJT,uBAKI,wBAAQoC,QAASN,KAAKX,eAAtB,qBACA,wBAAQiB,QAASN,KAAKX,aAAtB,qBACA,wBAAQiB,QAASN,KAAKZ,aAAtB,qBACA,wBAAQkB,QAASN,KAAKf,aAAtB,qBAGA,cAAC,EAAD,CAAWL,YAAY,iBAAiBC,aAAc,SAAA0B,GAAC,OAAE,EAAKR,SAAS,CAACN,YAAYc,EAAEC,OAAOC,WAC7F,8BACE,cAAC,EAAD,CAAUC,OAAO,QAAQjC,SAAUwB,IAGpCD,KAAKT,MAAMC,UAEZ,4BAIA,wBAAQc,QAAU,kBAAM,EAAKP,SAAS,CAACP,OAAO,uCAA9C,wBAKF,mBACEvB,UAAU,WACV0C,KAAK,sBACLH,OAAO,SACPI,IAAI,sBAJN,kC,GA7DQC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bfa03594.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = props => (\r\n    \r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h2 >{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n            \r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n            {props.monsters.map(monster => \r\n                (\r\n                    <Card key={monster.id} monster={monster}></Card>\r\n                    )\r\n                )}\r\n        </div>\r\n)\r\n    \r\n        \r\n        \r\n        \r\n        \r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder = {placeholder}\r\n        onChange = {handleChange}\r\n    />\r\n)\r\n    \r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component} from 'react';\r\nimport {CardList} from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.handleClick2= this.handleClick1.bind(this);\r\n    this.state = {\r\n      string : 'Hello Maher',\r\n      searchField : '',\r\n      monsters : [\r\n    \r\n      ]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    fetch('http://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters:users}))\r\n    // const saje = fetch('http://jsonplaceholder.typicode.com/users')\r\n    // saje.then(response => response.json())\r\n    // .then(users => this.setState({monsters:[{name:'Maher'}]}) )\r\n  }\r\n\r\n  handleClick1(){\r\n    console.log('Button 1 Clicked')\r\n  }\r\n  handleClick3 = () => {\r\n    console.log('Button 3 Clicked')\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const { searchField, monsters} = this.state;\r\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Monsters Rolodex</h1>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          \r\n            Edit <code>src/App.js</code> and save to reload. \r\n            <button onClick={this.handleClick1()}>CLick 1</button>\r\n            <button onClick={this.handleClick1}>CLick 2</button>\r\n            <button onClick={this.handleClick2}>CLick 3</button>\r\n            <button onClick={this.handleClick3}>CLick 4</button>\r\n\r\n            {/* <input type='search' placeholder='Search Monster' onChange={e=>this.setState({searchField:e.target.value})}/> */}\r\n            <SearchBox placeholder='Search Monster' handleChange={e=>this.setState({searchField:e.target.value})}></SearchBox>\r\n            <p>\r\n              <CardList cubaan='saje2' monsters={filteredMonsters}>\r\n                {/* {this.state.monsters.map(monster => <p>{monster.name}</p>)} */}\r\n              </CardList>\r\n            {this.state.string}\r\n            </p>\r\n            <p>\r\n            {/* {this.state.monsters.map(monster => <p>{monster.name}</p>)} */}\r\n            \r\n\r\n            <button onClick ={() => this.setState({string:'Assalamualaikum itu lebih baik...'})}>\r\n              Click Me\r\n            </button>\r\n          </p>\r\n          \r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}